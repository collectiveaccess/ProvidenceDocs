Option,Description,Example syntax
STORE,"Forces the value to be stored in the index, if possible; this can speed display of the content in a search but may slow down indexing and increases index size",not applicable
TOKENIZE,"Breaks content into separate values on whitespace characters, such as a spaces or line breaks, or by punctuation characters prior to indexing. This is the default and in general need not be specified. It may be combined with the DONT_TOKENIZE option to index values both as tokenized fragments and as a single ""as-is"" value. This can be useful when indexing accession numbers and other identifiers.",not applicable
DONT_TOKENIZE,"Indexes the value as-is, rather than breaking into separate values on whitespace characters, such as a spaces or line breaks, or by punctuation characters. This is useful for values that should not be indexed as text, such as numeric values and accession numbers/identifiers.",not applicable
DONT_INCLUDE_IN_SEARCH_FORM,Indicates that the data element should not be includable in user-defined search forms.,not applicable
BOOST,"A numeric ""boost"" value for the index field. Higher values will cause search hits on the boosted field to count for more when sorting by relevance.",BOOST = 100
INDEX_AS_IDNO,"Causes the value to be indexed with various permutations for flexible retrieval as a record identifier. For example, if this option is used then a search for KA1 would return KA.0001.",not applicable
INDEX_AS_MIMETYPE,"Causes the value to be indexed as a mime type variations to support flexible retrieval. For example, if this option is used then mime type values of ""image/wav"" would be index under both the literal mime type and ""WAVE Audio"". (Available from version 1.7.1)",not applicable
INDEX_ANCESTORS,"Enables hierarchical indexing for field, assuming it is in an hierarchical table, resulting in all values for this field in records above the subject in the hierarchy being indexing against the subject",not applicable
INDEX_ANCESTORS_START_AT_LEVEL,"Forces hierarchical indexing to start X levels down from the root. This allows you to omit the very highest, and least selective, levels of the hierarchy when indexing. If omitted indexing starts from the hierarchy root",INDEX_ANCESTORS_START_AT_LEVEL = 2
INDEX_ANCESTORS_MAX_NUMBER_OF_LEVELS,Sets the maximum number of levels above the subject to be indexed. If omitted all levels of the hierarchy above the subject are indexed,INDEX_ANCESTORS_MAX_NUMBER_OF_LEVELS = 3
INDEX_ANCESTORS_AS_PATH_WITH_DELIMITER,Sets a delimiter to place between each level of the hierarchy prior to indexing the entire hierarchy path above the subject. This is useful when you want to treat the hierarchy path as an identifier,INDEX_ANCESTORS_AS_PATH_WITH_DELIMITER = .
PRIVATE,Flags indexing for the data element as being only for use by authenticated users and not for public use. Typically Pawtucket front-ends will ignore indexing so flagged.,not applicable
COUNT,For metadata elements only. Causes the number of values set for the element in a record to be indexed. This enables searching on records by the number of values in a given field. (Available from version 1.7),not applicable