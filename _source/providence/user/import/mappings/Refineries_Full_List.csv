Refinery,Parameters Used,Function,Special Notes
entitySplitter,delimiter; relationshipType; entityType; attributes; relationshipTypeDefault; entityTypeDefault; interstitial; relatedEntities; nonPreferredLabels; parents; skipIfValue; relationships; matchOn; displaynameFormat; doNotParse; dontCreate; ignoreParent,"Creates an Entity Record or finds an exact match on Entity Name, and creates a relationship as defined in the import mapping. Breaks up parts of names, sets Entity type, and other parameters. ",None
entityHierarchyBuilder,parents,Creates an upper hierarchy of occurrences only when the table of the import is set to ca_entities,Map the CA table.element (Column 3 in an import mapping) to ca_entities.parent_id instead of ca_entities
entityJoiner,entityType; entityTypeDefault; forename; surname; other_forenames; middlename; displayname; prefix; suffix; attributes; nonPreferred_labels; relationshipType; relationshipTypeDefault; skipifValue; relatedEntities; interstitial,"Merges data from two or more source data columns to make a single entity record (when first and last Entity names are in two different columns, for example).  ",None
collectionSplitter,delimiter; relationshipType; collectionType; attributes; relationshipTypeDefault; collectionTypeDefault; parents; nonPreferredLabels; interstitial; skipIfValue; relationships; matchOn; ignoreParent; dontCreate,"Creates a Collection Record or finds an exact match on name, and creates a flat relationshp to the imported record, with the parent parameter building an upper hierarchy above the related collection. ",Builds a hierarchy when the import table is set to ca_collections
collectionHierarchyBuilder,parents; relationships,Creates an upper hierarchy of collections only when the import table is set to ca_collections,Map the CA table.element (Column 3 in an import mapping) to ca_collectionss.parent_id instead of ca_collections
placeSplitter,delimiter; relationshipType; placeType; attributes; relationshipTypeDefault; placeTypeDefault; placeHierarchy; nonPreferredLabels; interstitial; parents; relationships; matchOn; ignoreParent; dontCreate,"Creates a Place Record or finds an exact match on name, and creates a relationship as defined in the import mapping",None
placeHierarchyBuilder,parents; relationships,Creates an upper hierarchy of places only when the import table is set to ca_places,Map the CA table.element (Column 3 in an import mapping) to ca_places.parent_id instead of ca_places
movementSplitter,delimiter; relationshipType; movementType; attributes; parents; relationshipTypeDefault; movementTypeDefault; nonPreferredLabels; insterstitial; relationships; matchOn; ignoreParent; dontCreate,"Creates a Movement Record or finds an exact match on name, and creates a relationship",None
objectLotSplitter,delimiter; relationshipType; objectLotStatus; objectLotStatusDefault; objectLotType; attributes; relationshipTypeDefault; objectLotTypeDefault; nonPreferredLabels; interstitial; relationships; matchOn; ignoreParent; dontCreate,"Creates an Object Lot Record or finds an exact match on name, and creates a relationship",None
objectSplitter,delimiter; relationshipType; objectType; attributes; parents; relationshipTypeDefault; objectTypeDefault; nonPreferredLabels; interstitial; relationships; matchOn; ignoreParent; dontCreate,"Creates an Object Record or finds an exact match on name, and creates a relationship",None
objectRepresentationSplitter,objectRepresentationType; attributes; mediaPrefix; matchOn; dontCreate,"Locates media by finding an exact match on filename, and generates an Object Representation for the object being imported",Splitter should be mapped to the name of the media to be imported
objectHierarchyBuilder,parents; matchOn; dontMatchOnLabel; relationships,Imports a hierarchy of List Items when the import table is set to ca_objects,Map the CA table.element (Column 3 in an import mapping) to ca_objects.parent_id instead of ca_objects
occurrenceSplitter,delimiter; relationshipType; occurrenceType; attributes; parents; relationshipTypeDefault; occurrenceTypeDefault; nonPreferredLabels; interstitial; relationships; matchOn; ignoreParent; dontCreate,"Creates an Occurrence Record or finds an exact match on name, and creates a relationship",None
occurrenceHierarchyBuilder,parents; relationships,Creates an upper hierarchy fo occurrences only when the import table is set to ca_occurrences,Map the CA table.element (Column 3 in an import mapping) to ca_occurrences.parent_id instead of ca_occurrences for occurrence_Splitter
listItemSplitter,delimiter; relationshipType; listItemType; attributes; parents; list; relationshipTypeDefault; listItemTypeDefault; interstitial; relationships; matchOn; ignoreParent; dontCreate,"Creates a List Item or finds an exact match on name, and creates a relationship",None
listItemHierarchyBuilder,parents; list; relationships,Imports a hierarchy of List Items when the import table is set to ca_list_items,Map the CA table.element (Column 3 in an import mapping) to ca_list_items.parent_id instead of ca_list_items for listItemSplitter
listItemIndentedHierarchyBuilder,levels; levelTypes; list; mode,Builds a hierarchical list from data sources where indents are used (in Excel) to indicate a hierarchical structure,The list can be imported without relationships to any extant or newly created records; the list can be imported in context of and as metadata for an import that maps authority records of another type (objects that carry the list items as metadata)
storageLocationSplitter,hierarchicalStorageLocationTypes; delimiter; hierarchicalDelimiter; parents; nonPreferredLabels; interstitial; relationshipType; storageLocationType; attributes; relationshipTypeDefault; storageLocationTypeDefault; relationships; matchOn; ignoreParent; dontCreate,"Creates a Storage Location Record or finds an exact match on name, and creates a relationship",None
storageLocationHierarchyBuilder,parents; relationships,Creates an upper hierarchy fo occurrences only when the import table is set to ca_occurrences,Map the CA table.element (Column 3 in an import mapping) to ca_storage_locations.parent_id instead of ca_storage_locations for storageLocationSplitter
loanSplitter,loanType; relationshipType; delimiter; attributes; relationshipTypeDefault; loanTypeDefault; interstitial; parents; relationships; matchOn; ignoreParent; dontCreate,"Creates a Loan Record or finds an exact match on name, and creates a relationship","The loanSplitter creates new records, and as result, full container paths must be specified in the attributes parameter (for example, ca_table.container_code.subElement_code)"
measurementsSplitter,delimiter; units; elements; attributes,"Formats data values that are mapped to an element of the datatype Length or Weight. Will parse dimension expressions in the form dimension1/delimiter/dimension2, and so on","Parsing includes applying default dimensions when none are specified, stripping extraneous trailing text and normalizing unit specifications. The measurementsSplitter does not create new records; it only maps data. As a result, full container paths must be specified in the attributes/elements parameter (for example, use subElement_code or measurementsWidth)"
tourStopSplitter,delimiter; relationshipType; tourStopType; attributes; tour; relationshipTypeDefault; tourStopTypeDefault; nonPreferredLabels; interstitial; relationships; ignoreParent; dontCreate,"Creates a Tour Stop Record or finds an exact match on name, and creates a relationship",None
tourMaker,tourType; attributes; tourTypeDefault,Creates a tour parent in a tour stop mapping,None
dateJoiner,mode; month; day; year; startDay; startMonth; startYear; endDay; endMonth; endYear; expression; start; end; skipStartIfExpression; skipStartIfExpressionReplacementValue; skipEndIfExpression; skipEndIfExpressionReplacementValue,Merges data from two or more source data columns to make a single data field in CollectiveAccess,Any text wapped with the date() function will parse as a numeric value that can be then compared as is with any other numeric quanitity. For example: “date(^start) > date(^end)” will evaluate true if the “start” date is after the end date.
dateAccuracyJoiner,accuracyField; dateFormat; accuracyValueDay; accuracyValueMonth; accuracyValueYear; dateParseFailureReturnMode; unknownAccuracyValueReturnMode,"Merges a date input field with an accuracy input field, where the source data specifies granularity of a date in a separate column from the date value. For example, a date of 2014-04-01 with an accuracy of month would result in the date 2014-04 being stored in CollectiveAccess","Map the date value field into the CA attribute,  then use the refinery and refinery settings to specify other parameters. "
ATRelatedGetter,,,